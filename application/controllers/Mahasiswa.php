<?php

use PHPUnit\TextUI\XmlConfiguration\Loader;

defined('BASEPATH') OR exit('No direct script access allowed');

/**
* @property Auth_model $Auth_model
* @property User_model $User_model
* @property CI_Session $session
* @property CI_Input $input
* @property CI_Form_validation $form_validation
* @property CI_Loader $load
* @property Student_model $student_model
* @property Grade_model $Grade_model
* @property PDFLib $loadHtml
* @property Loader $load_view
* @property CI_Loader $load
* @property PDF $pdf
* @property CI_Session $session
* @property CI_Input $input
* @property CI_Form_validation $form_validation
 */

class Mahasiswa extends CI_Controller {
    
    public function __construct() {
        parent::__construct();
        // Load required models
        $this->load->model('student_model');
        $this->load->model('grade_model');
        
        $this->load->library('session');
        $this->load->helper('url');
        $this->load->helper('form');
        $this->load->library('pdf');

        if (!$this->session->userdata('role') || $this->session->userdata('role') !== 'mahasiswa') {
            redirect('auth');
        }
    }

    public function dashboard() {
            $data['students'] = $this->student_model->get_all_students();
            $mahasiswa_id = [$this->session->userdata('user_id')];  
            $data['mahasiswa_scores'] = $this->student_model->get_mahasiswa_scores($mahasiswa_id);
            $this->load->view('mahasiswa/dashboard', $data);
    }


public function print_nilai() {
    $mahasiswa_id = $this->session->userdata('user_id');
    $data['mahasiswa_scores'] = $this->student_model->get_mahasiswa_scores([$mahasiswa_id]);

    $filename = "Nilai_Mahasiswa_ ($mahasiswa_id)" . date('Y-m-d');

    $this->load->library('pdf');

    $this->pdf->AddPage('L');

    $this->pdf->SetFont('Arial', 'B', 16);
    $this->pdf->SetTextColor(51, 51, 51); 
    $this->pdf->Cell(0, 10, 'Nilai Mahasiswa', 0, 1, 'C');
    $this->pdf->Ln(10); 
    $this->pdf->SetFont('Arial', '', 12);
    $this->pdf->Cell(0, 10, 'Tanggal Cetak: ' . date('d-m-Y H:i:s'), 0, 1, 'L');
    $this->pdf->Ln(5);

    $this->pdf->SetFont('Arial', 'B', 12);
    $this->pdf->SetFillColor(242, 242, 242); 
    $this->pdf->SetTextColor(51, 51, 51); 
    $this->pdf->Cell(30, 10, 'Username', 1, 0, 'C', true);
    $this->pdf->Cell(30, 10, 'Student ID', 1, 0, 'C', true);
    $this->pdf->Cell(30, 10, 'Diskusi', 1, 0, 'C', true);
    $this->pdf->Cell(30, 10, 'Praktikum', 1, 0, 'C', true);
    $this->pdf->Cell(30, 10, 'Responsi', 1, 0, 'C', true);
    $this->pdf->Cell(30, 10, 'UTS', 1, 0, 'C', true);
    $this->pdf->Cell(30, 10, 'UAS', 1, 0, 'C', true);
    $this->pdf->Cell(30, 10, 'Grade', 1, 1, 'C', true);

    $this->pdf->SetFont('Arial', '', 12);
    $this->pdf->SetTextColor(0, 0, 0); 
    if (!empty($data['mahasiswa_scores'])) {
        foreach ($data['mahasiswa_scores'] as $score) {
            $this->pdf->Cell(30, 10, htmlspecialchars($score['username']), 1, 0, 'C');
            $this->pdf->Cell(30, 10, htmlspecialchars($score['student_id']), 1, 0, 'C');
            $this->pdf->Cell(30, 10, htmlspecialchars($score['diskusi']), 1, 0, 'C');
            $this->pdf->Cell(30, 10, htmlspecialchars($score['praktikum']), 1, 0, 'C');
            $this->pdf->Cell(30, 10, htmlspecialchars($score['responsi']), 1, 0, 'C');
            $this->pdf->Cell(30, 10, htmlspecialchars($score['uts']), 1, 0, 'C');
            $this->pdf->Cell(30, 10, htmlspecialchars($score['uas']), 1, 0, 'C');
            $this->pdf->Cell(30, 10, htmlspecialchars($score['nilai']), 1, 1, 'C');
        }
    } else {
        $this->pdf->Cell(240, 10, 'No grades available at the moment.', 1, 1, 'C');
    }

    $this->pdf->Ln(10);
    $this->pdf->SetFont('Arial', 'I', 10);
    $this->pdf->SetTextColor(102, 102, 102); 
    $this->pdf->Cell(0, 10, 'Document generated by the system', 0, 1, 'R');
    $this->pdf->Cell(0, 10, 'This is an official grade report', 0, 1, 'R');

    $this->pdf->Output('I', $filename . '.pdf');
}

// }
}

    